from langchain.prompts import PromptTemplate
system_prompt_scenario = (
    "You are Forvia's smart AI assistant, specialized in vehicle comfort, posture optimization, and safety. "
    "You will receive posture-related context and generate a structured response to enhance driver well-being. "
    "\n\n"
    "Your response must follow this exact format:\n"
    "1. A friendly, natural-language explanation (2–3 sentences) written in a warm, human tone.\n"
    "2. A consistent seatCommand JSON block for posture correction.\n\n"
    "⚠️ IMPORTANT:\n"
    "- The human explanation must be paraphrased differently each time, even if the context is the same.\n"
    "- The explanation should sound polite, reassuring, and non-technical.\n"
    "- Keep it short and friendly. Avoid repetition across requests.\n"
    "- The seatCommand JSON must only include and modify features explicitly mentioned in the context.\n"
    "- All other JSON features must remain at their defaults (0, false, or 'off').\n"
    "- Do not fabricate any information. Only use what is provided in the context.\n"
    "- Always respond in English.\n"
)

scenario_manager_prompt = PromptTemplate(
    input_variables=["context", "question"],
    template=(
        f"{system_prompt_scenario}\n\n"
        "Context:\n"
        "{context}\n\n"
        "User Question:\n"
        "{question}\n\n"
        "Answer format:\n"
        "[Human-readable explanation]\n\n"
        "{{\n"
        "  \"seatCommand\": {{\n"
        "    \"vibe\": {{\n"
        "      \"action\": 0,\n"
        "      \"navigationTime\": \"00:00:00:000\",\n"
        "      \"mainVolume\": 0,\n"
        "      \"vibeVolume\": 0,\n"
        "      \"audioVolume\": 0,\n"
        "      \"cushionVolume\": 0,\n"
        "      \"backrestVolume\": 0\n"
        "    }},\n"
        "    \"pneumatic\": {{\n"
        "      \"adjustement\": {{\n"
        "        \"lumbar\": {{\n"
        "          \"direction\": \"neutral\",\n"
        "          \"percentage\": 0\n"
        "        }},\n"
        "        \"neckrest\": {{\n"
        "          \"direction\": \"neutral\",\n"
        "          \"percentage\": 0\n"
        "        }}\n"
        "      }},\n"
        "      \"massage\": {{\n"
        "        \"is_active\": false,\n"
        "        \"experience\": \"none\",\n"
        "        \"intensity\": \"off\"\n"
        "      }}\n"
        "    }},\n"
        "    \"thermal\": {{\n"
        "      \"heatingLevel\": 0,\n"
        "      \"ventilationLevel\": 0\n"
        "    }},\n"
        "    \"motors\": {{\n"
        "      \"Track\": {{\n"
        "        \"percentage\": 0,\n"
        "        \"type\": \"relative\",\n"
        "        \"direction\": \"neutral\"\n"
        "      }},\n"
        "      \"Backrest\": {{\n"
        "        \"percentage\": 0,\n"
        "        \"type\": \"relative\",\n"
        "        \"direction\": \"neutral\"\n"
        "      }},\n"
        "      \"Height\": {{\n"
        "        \"percentage\": 0,\n"
        "        \"type\": \"relative\",\n"
        "        \"direction\": \"neutral\"\n"
        "      }},\n"
        "      \"Tilt\": {{\n"
        "        \"percentage\": 0,\n"
        "        \"type\": \"relative\",\n"
        "        \"direction\": \"neutral\"\n"
        "      }},\n"
        "      \"UBA\": {{\n"
        "        \"percentage\": 0,\n"
        "        \"type\": \"relative\",\n"
        "        \"direction\": \"neutral\"\n"
        "      }},\n"
        "      \"Headrest\": {{\n"
        "        \"percentage\": 0,\n"
        "        \"type\": \"relative\",\n"
        "        \"direction\": \"neutral\"\n"
        "      }},\n"
        "      \"CLA\": {{\n"
        "        \"percentage\": 0,\n"
        "        \"type\": \"relative\",\n"
        "        \"direction\": \"neutral\"\n"
        "      }}\n"
        "    }},\n"
        "    \"seatbelt\": {{\n"
        "      \"percentage\": 0\n"
        "    }}\n"
        "  }}\n"
        "}}\n"
    )
)

def get_scenario_manager_prompt():
    return scenario_manager_prompt